/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.mycompany.myapp.dao;

import com.mycompany.myapp.dto.*;
import com.mycompany.myapp.exceptions.*;

public interface TurmasDao
{
	/** 
	 * Inserts a new row in the turmas table.
	 */
	public TurmasPk insert(Turmas dto) throws TurmasDaoException;

	/** 
	 * Updates a single row in the turmas table.
	 */
	public void update(TurmasPk pk, Turmas dto) throws TurmasDaoException;

	/** 
	 * Deletes a single row in the turmas table.
	 */
	public void delete(TurmasPk pk) throws TurmasDaoException;

	/** 
	 * Returns the rows from the turmas table that matches the specified primary-key value.
	 */
	public Turmas findByPrimaryKey(TurmasPk pk) throws TurmasDaoException;

	/** 
	 * Returns all rows from the turmas table that match the criteria 'idProfessor = :idProfessor'.
	 */
	public Turmas findByPrimaryKey(int idProfessor) throws TurmasDaoException;

	/** 
	 * Returns all rows from the turmas table that match the criteria ''.
	 */
	public Turmas[] findAll() throws TurmasDaoException;

	/** 
	 * Returns all rows from the turmas table that match the criteria 'idProfessor = :idProfessor'.
	 */
	public Turmas[] findWhereIdProfessorEquals(int idProfessor) throws TurmasDaoException;

	/** 
	 * Returns all rows from the turmas table that match the criteria 'idDisciplina = :idDisciplina'.
	 */
	public Turmas[] findWhereIdDisciplinaEquals(String idDisciplina) throws TurmasDaoException;

	/** 
	 * Returns all rows from the turmas table that match the criteria 'Horario = :horario'.
	 */
	public Turmas[] findWhereHorarioEquals(String horario) throws TurmasDaoException;

	/** 
	 * Returns all rows from the turmas table that match the criteria 'Aula = :aula'.
	 */
	public Turmas[] findWhereAulaEquals(String aula) throws TurmasDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the turmas table that match the specified arbitrary SQL statement
	 */
	public Turmas[] findByDynamicSelect(String sql, Object[] sqlParams) throws TurmasDaoException;

	/** 
	 * Returns all rows from the turmas table that match the specified arbitrary SQL statement
	 */
	public Turmas[] findByDynamicWhere(String sql, Object[] sqlParams) throws TurmasDaoException;

}
