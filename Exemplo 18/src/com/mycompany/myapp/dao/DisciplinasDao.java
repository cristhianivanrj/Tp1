/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.mycompany.myapp.dao;

import com.mycompany.myapp.dto.*;
import com.mycompany.myapp.exceptions.*;

public interface DisciplinasDao
{
	/** 
	 * Inserts a new row in the disciplinas table.
	 */
	public DisciplinasPk insert(Disciplinas dto) throws DisciplinasDaoException;

	/** 
	 * Updates a single row in the disciplinas table.
	 */
	public void update(DisciplinasPk pk, Disciplinas dto) throws DisciplinasDaoException;

	/** 
	 * Deletes a single row in the disciplinas table.
	 */
	public void delete(DisciplinasPk pk) throws DisciplinasDaoException;

	/** 
	 * Returns the rows from the disciplinas table that matches the specified primary-key value.
	 */
	public Disciplinas findByPrimaryKey(DisciplinasPk pk) throws DisciplinasDaoException;

	/** 
	 * Returns all rows from the disciplinas table that match the criteria 'idDisciplina = :idDisciplina'.
	 */
	public Disciplinas findByPrimaryKey(int idDisciplina) throws DisciplinasDaoException;

	/** 
	 * Returns all rows from the disciplinas table that match the criteria ''.
	 */
	public Disciplinas[] findAll() throws DisciplinasDaoException;

	/** 
	 * Returns all rows from the disciplinas table that match the criteria 'idDisciplina = :idDisciplina'.
	 */
	public Disciplinas[] findWhereIdDisciplinaEquals(int idDisciplina) throws DisciplinasDaoException;

	/** 
	 * Returns all rows from the disciplinas table that match the criteria 'Disciplina = :disciplina'.
	 */
	public Disciplinas[] findWhereDisciplinaEquals(String disciplina) throws DisciplinasDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the disciplinas table that match the specified arbitrary SQL statement
	 */
	public Disciplinas[] findByDynamicSelect(String sql, Object[] sqlParams) throws DisciplinasDaoException;

	/** 
	 * Returns all rows from the disciplinas table that match the specified arbitrary SQL statement
	 */
	public Disciplinas[] findByDynamicWhere(String sql, Object[] sqlParams) throws DisciplinasDaoException;

}
